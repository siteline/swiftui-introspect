skip_docs

lane :test do |options|
    platform = options[:platform].to_s
    version = options[:version].to_i
    scheme = options[:scheme].to_s

    case platform
    when "macos"
        case scheme
        when "Introspect"
            spm(command: "test")
        when "SwiftUIIntrospectTests"
            for destination in ["platform=macOS", "platform=macOS,variant=Mac Catalyst"]
                run_tests(
                    build_for_testing: (destination.include? "Catalyst"), # build-only on Mac Catalyst since tests crash because app isn't launched for some reason. error: Thread 1: "NSApplication has not been created yet. Consider using -[UINSApplicationDelegate runBlockWhenSharedDelegateBecomesAvailable:] to avoid premature instantiation."
                    scheme: scheme,
                    destination: [destination],
                    catalyst_platform: "macos",
                    disable_slide_to_type: false,
                    prelaunch_simulator: false,
                    ensure_devices_found: true,
                    force_quit_simulator: false,
                    disable_concurrent_testing: true,
                    xcargs: version == 11 ? 'SWIFT_ACTIVE_COMPILATION_CONDITIONS="$(inherited) LEGACY_MACOS_SDK"' : nil,
                )
            end
        else
            raise "Unsupported scheme: #{scheme}"
        end
        next # skip the rest of the lane
    when "ios"
        devices = case version
        when 13
            [
                "iPhone 11 (13.7)",
                "iPad Pro (9.7-inch) (13.7)",
            ]
        when 14
            [
                "iPhone 12 (14.5)",
                "iPad Pro (9.7-inch) (14.5)",
            ]
        when 15
            [
                "iPhone SE (3rd generation) (15.5)",
                "iPad Air (5th generation) (15.5)",
            ]
        when 16
            [
                "iPhone 14 (16.4)",
                "iPad Pro (11-inch) (4th generation) (16.4)",
            ]
        else
            raise "Unsupported iOS version: #{version}"
        end
    when "tvos"
        devices = case version
        when 13
            [
                "Apple TV (13.4)",
            ]
        when 14
            [
                "Apple TV (14.5)",
            ]
        when 15
            [
                "Apple TV (15.4)",
            ]
        when 16
            [
                "Apple TV (16.4)",
            ]
        else
            raise "Unsupported tvOS version: #{version}"
        end
    else
        raise "Unsupported platform: #{platform}"
    end

    run_tests(
        scheme: scheme,
        devices: devices,
        prelaunch_simulator: true,
        ensure_devices_found: true,
        force_quit_simulator: true,
        disable_concurrent_testing: true,
    )
end
